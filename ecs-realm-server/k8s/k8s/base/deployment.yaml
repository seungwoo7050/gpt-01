# [SEQUENCE: 1] Deployment for game server instances
apiVersion: apps/v1
kind: Deployment
metadata:
  name: game-server
  namespace: mmorpg-game
  labels:
    app.kubernetes.io/name: game-server
    app.kubernetes.io/component: backend
spec:
  # [SEQUENCE: 2] Replica configuration
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: game-server
      app.kubernetes.io/component: backend
  
  # [SEQUENCE: 3] Rolling update strategy
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  template:
    metadata:
      labels:
        app.kubernetes.io/name: game-server
        app.kubernetes.io/component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    
    spec:
      # [SEQUENCE: 4] Security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      # [SEQUENCE: 5] Init container for DB migration
      initContainers:
      - name: db-migrate
        image: migrate/migrate:latest
        command:
        - migrate
        - -path=/migrations
        - -database=postgres://$(DB_USER):$(DB_PASSWORD)@$(DB_HOST)/$(DB_NAME)?sslmode=disable
        - up
        env:
        - name: DB_HOST
          value: postgres-service
        - name: DB_NAME
          value: gamedb
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        volumeMounts:
        - name: migrations
          mountPath: /migrations
      
      # [SEQUENCE: 6] Main game server container
      containers:
      - name: game-server
        image: mmorpg/game-server:latest
        imagePullPolicy: IfNotPresent
        
        # [SEQUENCE: 7] Container ports
        ports:
        - name: game
          containerPort: 8080
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        - name: metrics
          containerPort: 9090
          protocol: TCP
        
        # [SEQUENCE: 8] Environment variables
        env:
        - name: SERVER_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: WORLD_ZONE_ID
          value: "1"
        - name: LOG_LEVEL
          value: "info"
        - name: DB_HOST
          value: postgres-service
        - name: DB_NAME
          value: gamedb
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: REDIS_URL
          value: "redis://redis-service:6379/0"
        - name: RABBITMQ_URL
          valueFrom:
            secretKeyRef:
              name: rabbitmq-credentials
              key: url
        
        # [SEQUENCE: 9] Resource limits
        resources:
          requests:
            cpu: "500m"
            memory: "1Gi"
          limits:
            cpu: "2000m"
            memory: "4Gi"
        
        # [SEQUENCE: 10] Health checks
        livenessProbe:
          httpGet:
            path: /health
            port: health
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: health
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        # [SEQUENCE: 11] Volume mounts
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: logs
          mountPath: /app/logs
      
      # [SEQUENCE: 12] Volumes
      volumes:
      - name: config
        configMap:
          name: game-server-config
      - name: migrations
        configMap:
          name: db-migrations
      - name: logs
        emptyDir:
          sizeLimit: 1Gi