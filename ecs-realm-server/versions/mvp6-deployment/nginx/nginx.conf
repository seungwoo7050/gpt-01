# [SEQUENCE: 1] Nginx configuration for load balancing game servers
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# [SEQUENCE: 2] Worker connection settings
events {
    worker_connections 10000;
    use epoll;
    multi_accept on;
}

# [SEQUENCE: 3] HTTP configuration for monitoring endpoints
http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # [SEQUENCE: 4] Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # [SEQUENCE: 5] Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # [SEQUENCE: 6] Upstream for health checks
    upstream health_checks {
        server game-server-zone1:8081;
        server game-server-zone2:8081;
    }
    
    # [SEQUENCE: 7] Health check endpoint
    server {
        listen 80;
        server_name health.mmorpg.local;
        
        location /health {
            proxy_pass http://health_checks;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        location /metrics {
            stub_status on;
            access_log off;
        }
    }
}

# [SEQUENCE: 8] TCP/UDP stream for game traffic
stream {
    # [SEQUENCE: 9] Upstream game servers
    upstream game_servers {
        least_conn;
        server game-server-zone1:8080 max_fails=3 fail_timeout=30s;
        server game-server-zone2:8080 max_fails=3 fail_timeout=30s;
    }
    
    # [SEQUENCE: 10] TCP load balancing for game traffic
    server {
        listen 8080;
        proxy_pass game_servers;
        proxy_connect_timeout 1s;
        proxy_timeout 300s;
        proxy_buffer_size 64k;
        
        # [SEQUENCE: 11] TCP keepalive for persistent connections
        proxy_socket_keepalive on;
    }
    
    # [SEQUENCE: 12] UDP support for game traffic (if needed)
    server {
        listen 8080 udp;
        proxy_pass game_servers;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_bind $remote_addr transparent;
    }
    
    # [SEQUENCE: 13] Logging for debugging
    access_log /var/log/nginx/stream.log;
}