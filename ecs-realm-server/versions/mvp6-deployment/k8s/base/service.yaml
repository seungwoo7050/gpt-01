# [SEQUENCE: 1] Service for game server
apiVersion: v1
kind: Service
metadata:
  name: game-server-service
  namespace: mmorpg-game
  labels:
    app.kubernetes.io/name: game-server
    app.kubernetes.io/component: backend
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9090"
spec:
  # [SEQUENCE: 2] Service type and selector
  type: ClusterIP
  selector:
    app.kubernetes.io/name: game-server
    app.kubernetes.io/component: backend
  
  # [SEQUENCE: 3] Port mappings
  ports:
  - name: game
    port: 8080
    targetPort: game
    protocol: TCP
  - name: health
    port: 8081
    targetPort: health
    protocol: TCP
  - name: metrics
    port: 9090
    targetPort: metrics
    protocol: TCP

---
# [SEQUENCE: 4] Headless service for StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: game-server-headless
  namespace: mmorpg-game
  labels:
    app.kubernetes.io/name: game-server
    app.kubernetes.io/component: backend
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: game-server
    app.kubernetes.io/component: backend
  ports:
  - name: game
    port: 8080
    targetPort: game

---
# [SEQUENCE: 5] LoadBalancer service for external access
apiVersion: v1
kind: Service
metadata:
  name: game-server-lb
  namespace: mmorpg-game
  labels:
    app.kubernetes.io/name: game-server
    app.kubernetes.io/component: backend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
spec:
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: game-server
    app.kubernetes.io/component: backend
  ports:
  - name: game
    port: 8080
    targetPort: game
    protocol: TCP